---
// src/pages/admin/products.astro
import AdminLayout from '../../layouts/AdminLayout.astro';
import { getCurrentUser } from '../../lib/auth';
import { getAllProducts, createProduct, deleteProduct } from '../../lib/admin-api';

// Cek otentikasi sebelum memuat halaman
let user = null;

try {
  user = await getCurrentUser();
  if (!user) {
    // Redirect ke halaman login jika tidak otentikasi
    return Astro.redirect('/admin/login');
  }
} catch (error) {
  console.error('Error checking authentication:', error);
  return Astro.redirect('/admin/login');
}

// Ambil data produk
const products = await getAllProducts();
---

<AdminLayout title="Produk">
  <div class="flex justify-between items-center mb-6">
    <h2 class="text-2xl font-bold text-[var(--furniture-brown)]">Manajemen Produk</h2>
    <a href="/admin/products/new" class="btn-primary">Tambah Produk Baru</a>
  </div>
  
  <!-- Tabel Produk -->
  <div class="bg-white rounded-lg shadow-md overflow-hidden">
    <table class="min-w-full divide-y divide-gray-200">
      <thead class="bg-[var(--furniture-light-brown)]">
        <tr>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-[var(--furniture-brown)] uppercase tracking-wider">Nama Produk</th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-[var(--furniture-brown)] uppercase tracking-wider">Kategori</th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-[var(--furniture-brown)] uppercase tracking-wider">Harga</th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-[var(--furniture-brown)] uppercase tracking-wider">Stok</th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-[var(--furniture-brown)] uppercase tracking-wider">Terjual</th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-[var(--furniture-brown)] uppercase tracking-wider">Rating</th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-[var(--furniture-brown)] uppercase tracking-wider">Aksi</th>
        </tr>
      </thead>
      <tbody class="bg-white divide-y divide-gray-200">
        {products.map((product) => (
          <tr key={product.id}>
            <td class="px-6 py-4 whitespace-nowrap">
              <div class="text-sm font-medium text-gray-900">{product.name}</div>
              <div class="text-sm text-gray-500">{product.description?.substring(0, 50)}...</div>
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
              {product.category_name?.name || 'Tidak ada kategori'}
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
              Rp {product.price?.toLocaleString('id-ID')}
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
              {product.stock || 'N/A'}
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
              {product.sales_count || 0}
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
              <div class="flex items-center">
                <div class="flex text-yellow-400">
                  {[...Array(5)].map((_, i) => (
                    <svg key={i} xmlns="http://www.w3.org/2000/svg" class={`h-4 w-4 ${i < Math.floor(product.avg_rating || 0) ? 'text-yellow-400' : 'text-gray-300'}`} viewBox="0 0 20 20" fill="currentColor">
                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                    </svg>
                  ))}
                </div>
                <span class="ml-1">({product.avg_rating?.toFixed(1) || '0.0'})</span>
              </div>
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
              <a href={`/admin/products/edit/${product.id}`} class="text-blue-600 hover:text-blue-900 mr-3">Edit</a>
              <button 
                onclick="deleteProductConfirm('{product.id}', '{product.name}')" 
                class="text-red-600 hover:text-red-900"
              >
                Hapus
              </button>
            </td>
          </tr>
        ))}
      </tbody>
    </table>
  </div>

  <script>
    async function deleteProductConfirm(productId, productName) {
      if (confirm(`Apakah Anda yakin ingin menghapus produk "${productName}"? Tindakan ini tidak dapat dibatalkan.`)) {
        try {
          // Dalam implementasi nyata, Anda akan memanggil API untuk menghapus produk
          // const response = await fetch(`/api/admin/products/${productId}`, { method: 'DELETE' });
          // if (response.ok) {
          //   location.reload();
          // } else {
          //   alert('Gagal menghapus produk');
          // }
          
          // Untuk saat ini, kita hanya menampilkan pesan bahwa produk akan dihapus
          alert(`Produk "${productName}" akan dihapus (fungsi hapus akan diimplementasikan nanti)`);
        } catch (error) {
          console.error('Error deleting product:', error);
          alert('Terjadi kesalahan saat menghapus produk');
        }
      }
    }
  </script>
</AdminLayout>