---
// src/pages/admin/users.astro
import Layout from '../../layouts/Layout.astro';
import { getCurrentUser } from '../../lib/auth';
import { getSupabase } from '../../lib/supabase';

// Periksa otentikasi admin
const { data: { user } } = await supabase.auth.getUser();
if (!user) {
  return Response.redirect(new URL('/admin/login', request.url));
}

// Cek apakah user memiliki role admin
const { data: profileData } = await supabase
  .from('profiles')
  .select('id')
  .eq('id', user.id)
  .single();

if (!profileData) {
  return Response.redirect(new URL('/akun/login', request.url));
}

// Ambil daftar pengguna
let users = [];
const { data: profilesData, error } = await getSupabase()
  .from('profiles')
  .select(`
    id,
    email,
    full_name,
    phone,
    address,
    created_at,
    updated_at,
    user_level
  `)
  .order('created_at', { ascending: false });

if (profilesData) {
  users = profilesData;
}

if (error) {
  console.error('Error fetching users:', error);
}
---

<Layout>
  <div class="container mx-auto px-4 py-8">
    <div class="flex justify-between items-center mb-6">
      <h1 class="text-3xl font-bold text-gray-900">Manajemen Pengguna</h1>
    </div>
    
    <!-- Tabel Pengguna -->
    <div class="bg-white rounded-lg shadow-md overflow-hidden">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nama Lengkap</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">No. Telepon</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Level</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tanggal Daftar</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Aksi</th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          {users.map((profile) => (
            <tr key={profile.id}>
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="text-sm font-medium text-gray-900">{profile.email}</div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="text-sm text-gray-900">{profile.full_name || '-'}</div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                {profile.phone || '-'}
              </td>
              <td class="px-6 py-4 whitespace-nowrap">
                <span class={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                  ${profile.user_level === 'admin' ? 'bg-red-100 text-red-800' : 
                    profile.user_level === 'premium' ? 'bg-purple-100 text-purple-800' : 
                    'bg-green-100 text-green-800'}`}>
                  {profile.user_level || 'basic'}
                </span>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                {new Date(profile.created_at).toLocaleDateString('id-ID')}
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                <button 
                  onclick="changeUserLevel('{profile.id}', '{profile.user_level}')" 
                  class="text-blue-600 hover:text-blue-900 mr-3"
                >
                  Ubah Level
                </button>
                <button 
                  onclick="viewUserDetails('{profile.id}')" 
                  class="text-gray-600 hover:text-gray-900"
                >
                  Detail
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  </div>

  <script>
    async function changeUserLevel(userId, currentLevel) {
      const newLevel = prompt(`Ubah level pengguna (saat ini: ${currentLevel || 'basic'}). Pilihan: basic, premium, admin`, currentLevel);
      
      if (newLevel !== null) {
        const validLevels = ['basic', 'premium', 'admin'];
        if (!validLevels.includes(newLevel)) {
          alert('Level tidak valid. Pilihan: basic, premium, admin');
          return;
        }
        
        try {
          const response = await fetch(`/api/admin/users/${userId}/level`, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ level: newLevel })
          });
          
          if (response.ok) {
            alert('Level pengguna berhasil diubah');
            location.reload();
          } else {
            alert('Gagal mengubah level pengguna');
          }
        } catch (error) {
          console.error('Error changing user level:', error);
          alert('Terjadi kesalahan saat mengubah level pengguna');
        }
      }
    }
    
    function viewUserDetails(userId) {
      alert(`Detail pengguna akan ditampilkan di sini (fitur akan diimplementasikan nanti).\nID: ${userId}`);
    }
  </script>
</Layout>